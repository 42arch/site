{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\nimport remarkGfm from 'remark-gfm'\r\n// import rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypePrettyCode from 'rehype-pretty-code'\r\nimport rehypeSlug from 'rehype-slug'\r\nimport { getHighlighter, loadTheme } from 'shiki'\r\nimport path from 'path'\r\n\r\nconst Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `**/*.md`,\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      description: 'The title of the post',\r\n      required: true\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      description: 'The date of the post',\r\n      required: true\r\n    },\r\n    tags: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      description: 'The tags of the post',\r\n      required: false\r\n    }\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (post) => `blog/${post._raw.flattenedPath}`\r\n    },\r\n    slugAsParams: {\r\n      type: 'string',\r\n      resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/')\r\n    }\r\n  }\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'posts',\r\n  documentTypes: [Post],\r\n  markdown: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      [\r\n        rehypePrettyCode,\r\n        {\r\n          getHighlighter: async () => {\r\n            const theme = await loadTheme(\r\n              path.join(process.cwd(), 'src/lib/vscode-theme.json')\r\n            )\r\n            return await getHighlighter({ theme })\r\n          },\r\n          onVisitLine(node: any) {\r\n            // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n            // lines to be copy/pasted\r\n            if (node.children.length === 0) {\r\n              node.children = [{ type: 'text', value: ' ' }]\r\n            }\r\n          },\r\n          onVisitHighlightedLine(node: any) {\r\n            node.properties.className.push('line--highlighted')\r\n          },\r\n          onVisitHighlightedWord(node: any) {\r\n            node.properties.className = ['word--highlighted']\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n})\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AAEtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,SAAS,gBAAgB,iBAAiB;AAC1C,OAAO,UAAU;AAEjB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,QAAQ,KAAK,KAAK;AAAA,IACvC;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,IACvE;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,UAAU;AAAA,IACR,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,gBAAgB,YAAY;AAC1B,kBAAM,QAAQ,MAAM;AAAA,cAClB,KAAK,KAAK,QAAQ,IAAI,GAAG,2BAA2B;AAAA,YACtD;AACA,mBAAO,MAAM,eAAe,EAAE,MAAM,CAAC;AAAA,UACvC;AAAA,UACA,YAAY,MAAW;AAGrB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
